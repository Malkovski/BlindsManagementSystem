@using Blinds.Web.Areas.Administration.Models;
@using Blinds.Common
@using Kendo.Mvc.UI

@model PicturesModel

@{
    const string Controller = "Pictures";
}

@section scripts {
    <script type="text/javascript" src="@Url.Content("~/Areas/Administration/Scripts/KendoGridHelpers.js")"></script>
}

@Html.Partial("_AdminLinksPartial")

<h2>@GlobalConstants.PicturesControllerTitle</h2>

@Html.AntiForgeryToken()

@(Html.Kendo().Grid<PicturesModel>()
    .Name("grid-pictures")
    .Columns(columns =>
    {
        columns.Bound(model => model.BlindTypeName);
        columns.Bound(model => model.OriginalFileName);
        columns.Bound(model => model.OriginalSize);
        columns.Command(command =>
        {
            command.Destroy()
                .Text(GlobalConstants.Delete);
        }).Width(125);
    })
    .DataSource(data =>
    {
        data.Ajax()
            .Model(m => m.Id(h => h.Id))
            .PageSize(10)
            .ServerOperation(true)
            .Read(r => r.Action("Read", Controller).Data("sendAntiForgery"))
            .Destroy(del => del.Action("Destroy", Controller).Data("sendAntiForgery"))
            .Create(create => create.Action("Save", Controller).Data("sendAntiForgery"))
            .Events(events => events.Sync("sync_handler").Error("onError"));
    }
    )
    .Sortable()
    .Pageable(page => page.Refresh(true))
    .ToolBar(toolbar => toolbar.Create().Text(GlobalConstants.Create))
    .Editable(
                e => e.Mode(GridEditMode.PopUp).TemplateName("PicturesTemplate").Window(w => w.Title(GlobalConstants.AddEditLabel).Width(450))
            )
    .Filterable()
    .Resizable(resize => resize.Columns(true))
    .Selectable()
)

@(Html.Kendo().Notification()
    .Name("errorNotification")
)